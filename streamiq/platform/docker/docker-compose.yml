version: "3.9"

services:
  redpanda:
    image: redpandadata/redpanda:v23.2.12
    command: >
      redpanda start
      --overprovisioned
      --smp 1
      --memory 512M
      --reserve-memory 0M
      --node-id 0
      --check=false
      --kafka-addr PLAINTEXT://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
      --advertise-kafka-addr PLAINTEXT://redpanda:9092,OUTSIDE://host.docker.internal:9094
    ports:
      - "9092:9092"
      - "9094:9094"
    restart: unless-stopped

  console:
    image: redpandadata/console:latest
    depends_on:
      - redpanda
    environment:
      KAFKA_BROKERS: "redpanda:9092"
    ports:
      - "8080:8080"
    restart: unless-stopped

  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: streamiq
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    restart: unless-stopped

  classifier:
    build:
      context: ../../apps/classifier-py
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    restart: unless-stopped

  enricher:
    build:
      context: ../../apps/enricher-service
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: default
    depends_on:
      - redpanda
    ports:
      - "9001:9001"
    restart: unless-stopped

  anomaly:
    build:
      context: ../../apps/anomaly-service
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: default
    depends_on:
      - redpanda
    ports:
      - "9002:9002"
    restart: unless-stopped

  api:
    build:
      context: ../../apps/api-gateway
      dockerfile: Dockerfile
    depends_on:
      - redpanda
      - postgres
    ports:
      - "9000:9000"
    restart: unless-stopped

volumes:
  pgdata: {}
